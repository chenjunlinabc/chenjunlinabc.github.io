<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Rollup on 小陈的个人博客</title>
    <link>https://chenjunlinabc.github.io/tags/rollup/</link>
    <description>Recent content in Rollup on 小陈的个人博客</description>
    <image>
      <title>小陈的个人博客</title>
      <url>https://chenjunlinabc.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://chenjunlinabc.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Nov 2021 16:22:00 +0000</lastBuildDate><atom:link href="https://chenjunlinabc.github.io/tags/rollup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>简单使用Rollup模块打包工具</title>
      <link>https://chenjunlinabc.github.io/posts/119/</link>
      <pubDate>Wed, 10 Nov 2021 16:22:00 +0000</pubDate>
      
      <guid>https://chenjunlinabc.github.io/posts/119/</guid>
      <description>根据Rollup官方文档的介绍：Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。
Rollup和webpack那种偏向于应用打包不同，Rollup更专注于类库打包，像vue，react都是通过rollup打包的
注意：webpack支持HMR（热模块更新），而Rollup并不支持，因此在应用打包的时候还是选择webpack比较好，但是如果只是打包类库之类的，并且还是基于ES6模块开发的，那么就可以考虑选择rollup了，因为rollup在Tree-shaking和ES6模块有着算法优势。因为Rollup对模块化是使用新标准，例如 CommonJS，而不是老旧解决方案
提示：webpack已经支持Tree-shaking，并且在babel-loader的情况下也支持es6 module的打包
Rollup是ESM模块标准构建打包工具，源必须使用ESM模块标准，如果需要使用其他标准可通过插件完成
安装rollup
npm install rollup
查看帮助文档
rollup &amp;ndash;help
打包使用
rollup -i index.js 默认输出到终端
指定输出到哪个文件
rollup -i index.js --file dist.js 还可以指定输出模块标准是哪个
rollup -i index.js --file dist.js --format umd rollup -i index.js --file dist.js --format cjs rollup -i index.js --file dist.js --format iife 打包
rollup src/demo.js -f cjs -o dist/bundle.js
注意：-f是&amp;ndash;format的缩写，表示生成代码的格式，例如amd，cjs，es，umd，iife
使用UMD格式需要指明一个name属性，用来挂载模块到全局环境中
rollup src/demo.js -f umd -o dist/bundle.js &amp;ndash;name hallo
在global下声明一个名为hallo的对象，用来挂载全部的export模块</description>
    </item>
    
  </channel>
</rss>
